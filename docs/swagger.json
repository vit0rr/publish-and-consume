{
    "swagger": "2.0",
    "info": {
        "description": "Publish and Consume with RabbitMQ and MongoDB",
        "title": "Publish and Consume",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/": {
            "post": {
                "description": "Publish to queue",
                "summary": "Publish to queue",
                "parameters": [
                    {
                        "description": "Publish to queue body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/urlshort.PublishToQueueBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully published to queue",
                        "schema": {
                            "$ref": "#/definitions/urlshort.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/urlshort.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error during processing",
                        "schema": {
                            "$ref": "#/definitions/urlshort.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "urlshort.PublishToQueueBody": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "urlshort.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}